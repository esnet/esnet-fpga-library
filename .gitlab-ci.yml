include:
  - template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'

stages:
  - rtl_sim
#  - trigger_downstream

variables:
  GIT_STRATEGY: clone
  SEED: 0
  RANDOMIZE_SEED: 0

.common:
  image: $CI_REGISTRY/ht/xilinx-tools-docker:36639-g97523045
  before_script:
    - git clone https://gitlab.es.net/ht/open-nic-shell.git
    - make config BOARD_REPO=$CI_PROJECT_DIR/open-nic-shell/board_files/Xilinx
    - if [ $RANDOMIZE_SEED -gt 0 ]; then export SEED=$RANDOM; fi
    - echo "Running pipeline with SEED $SEED..."
  variables:
    XILINXD_LICENSE_FILE: "2100@dmv.es.net"
    # Required to keep click python module happy
    LC_ALL: C.UTF-8
    LANG: C.UTF-8
    GIT_SUBMODULE_STRATEGY: recursive

rtl_sim:
  stage: rtl_sim
  extends: .common
  tags:
    - ht-sim
  script:
    - make -C src/std/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/std/tests/regression/run_$SEED/sim.log
    - make -C src/sync/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/sync/tests/regression/run_$SEED/sim.log
    - make -C src/arb/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/arb/tests/regression/run_$SEED/sim.log
    - make -C src/mem/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/mem/tests/regression/run_$SEED/sim.log
    - make -C src/reg/proxy/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/reg/proxy/tests/regression/run_$SEED/sim.log
    - make -C src/reg/endian/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/reg/endian/tests/regression/run_$SEED/sim.log
    - make -C src/reg/example/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/reg/example/tests/regression/run_$SEED/sim.log
    - make -C src/fifo/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/fifo/tests/regression/run_$SEED/sim.log
    - make -C src/packet/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/packet/tests/regression/run_$SEED/sim.log
    - make -C src/axi4l/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/axi4l/tests/regression/run_$SEED/sim.log
    - make -C src/axi4s/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/axi4s/tests/regression/run_$SEED/sim.log
    - make -C src/crc/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/crc/tests/regression/run_$SEED/sim.log
    - make -C src/db/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/db/tests/regression/run_$SEED/sim.log
    - make -C src/htable/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/htable/tests/regression/run_$SEED/sim.log
    - make -C src/state/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/state/tests/regression/run_$SEED/sim.log
    - make -C src/timer/tests/regression SEED=$SEED
    - grep 'PASSED.*suites passing' src/timer/tests/regression/run_$SEED/sim.log
  artifacts:
    name: "artifacts.$CI_PROJECT_NAME.$CI_JOB_NAME.$CI_PIPELINE_ID"
    reports:
      junit:
        - src/*/tests/regression/run_*/tests.xml
    when: always
  timeout: 3h

#trigger_downstream_job:
#  stage: trigger_downstream
#  trigger:
#    project: ht/esnet-smartnic-hw
#    branch: main
#  rules:
#    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
