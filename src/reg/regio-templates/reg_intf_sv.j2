//------------------------------------------------------------------------------
// Application interface for {{ blk.name }} register block.
//
// NOTE: This file is autogenerated by regio. DO NOT EDIT.
//------------------------------------------------------------------------------

interface {{ blk.name_lower }}_reg_intf ();

    import {{ blk.name_lower }}_reg_pkg::*;
{%  for reg in blk.regs: -%}
  {%- if reg.access == "ro" %}
    reg_{{ reg.name_lower }}_t {{ reg.name_lower }}{{ [reg.count] if reg.count > 1}};
    reg_{{ reg.name_lower }}_t {{ reg.name_lower }}_nxt{{ [reg.count] if reg.count > 1}};
    logic {{ reg.name_lower }}_nxt_v{{ [reg.count] if reg.count > 1}};
  {%- elif reg.access == "wr_evt" %}
    reg_{{ reg.name_lower }}_t {{ reg.name_lower }}{{ [reg.count] if reg.count > 1}};
    logic {{ reg.name_lower }}_wr_evt{{ [reg.count] if reg.count > 1}};
  {%- elif reg.access == "rw" %}
    reg_{{ reg.name_lower }}_t {{ reg.name_lower }}{{ [reg.count] if reg.count > 1}};
  {%- elif reg.access == "rd_evt" %}
    reg_{{ reg.name_lower }}_t {{ reg.name_lower }}{{ [reg.count] if reg.count > 1}};
    reg_{{ reg.name_lower }}_t {{ reg.name_lower }}_nxt{{ [reg.count] if reg.count > 1}};
    logic {{ reg.name_lower }}_nxt_v{{ [reg.count] if reg.count > 1}};
    logic {{ reg.name_lower }}_rd_evt{{ [reg.count] if reg.count > 1}};
  {%- endif %}
{%- endfor %}

    modport controller (
{%- for reg in blk.regs: -%}
  {%- if reg.access == "ro" %}
        output {{ reg.name_lower }},
        input {{ reg.name_lower }}_nxt,
        input {{ reg.name_lower }}_nxt_v{{ ',' if not loop.last }}
  {%- elif reg.access == "wr_evt" %}
        output {{ reg.name_lower }},
        output {{ reg.name_lower }}_wr_evt{{ ',' if not loop.last }}
  {%- elif reg.access == "rw" %}
        output {{ reg.name_lower }}{{ ',' if not loop.last }}
  {%- elif reg.access == "rd_evt" %}
        output {{ reg.name_lower }},
        input {{ reg.name_lower }}_nxt,
        input {{ reg.name_lower }}_nxt_v,
        output {{ reg.name_lower }}_rd_evt{{ ',' if not loop.last }}
  {%- endif %}
{%- endfor %}
    );

    modport peripheral (
{%- for reg in blk.regs: -%}
  {%- if reg.access == "ro" %}
        input {{ reg.name_lower }},
        output {{ reg.name_lower }}_nxt,
        output {{ reg.name_lower }}_nxt_v{{ ',' if not loop.last }}
  {%- elif reg.access == "wr_evt" %}
        input {{ reg.name_lower }},
        input {{ reg.name_lower }}_wr_evt{{ ',' if not loop.last }}
  {%- elif reg.access == "rw" %}
        input {{ reg.name_lower }}{{ ',' if not loop.last }}
  {%- elif reg.access == "rd_evt" %}
        input {{ reg.name_lower }},
        output {{ reg.name_lower }}_nxt,
        output {{ reg.name_lower }}_nxt_v,
        input {{ reg.name_lower }}_rd_evt{{ ',' if not loop.last }}
  {%- endif %}
{%- endfor %}
    );

endinterface : {{ blk.name_lower }}_reg_intf
